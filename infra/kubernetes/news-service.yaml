# ServiceAccount for External DNS
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: kube-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::236528210774:role/news-service-dev-external-dns
---

# ServiceAccount for AWS Load Balancer Controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::236528210774:role/news-service-dev-aws-load-balancer-controller
---

# ServiceAccount for News API
apiVersion: v1
kind: ServiceAccount
metadata:
  name: news-api-service-sa
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::236528210774:role/news-service-dev-news-api-service
---

# ServiceAccount for Data Collector
apiVersion: v1
kind: ServiceAccount
metadata:
  name: news-data-collector-sa
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::236528210774:role/news-service-dev-news-data-collector
---

# Deployment - 뉴스 API 서비스 (8000 포트)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: news-api-service
  namespace: default
  labels:
    app: news-api-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: news-api-service
  template:
    metadata:
      labels:
        app: news-api-service
    spec:
      serviceAccountName: news-api-service-sa
      containers:
      - name: news-api
        image: yulee0461/news-api:latest
        ports:
        - containerPort: 8000
        # 헬스체크 타이밍을 DynamoDB 연결 시간을 고려해서 조정
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120  # 2분 대기 (DynamoDB 연결 시간 고려)
          periodSeconds: 30         # 30초마다 체크
          timeoutSeconds: 10        # 10초 타임아웃
          failureThreshold: 3       # 3번 실패 후 재시작
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 90   # 1.5분 대기
          periodSeconds: 15         # 15초마다 체크  
          timeoutSeconds: 10        # 10초 타임아웃
          failureThreshold: 3       # 3번 실패 후 not ready
        # 리소스 설정
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        # 환경변수 추가 (필요한 경우)
        env:
        - name: AWS_DEFAULT_REGION
          value: ap-northeast-2
        - name: DYNAMODB_TABLE_NAME
          value: naver_news_articles
---

# Service - API 서비스 노출 (8000 포트)
apiVersion: v1
kind: Service
metadata:
  name: news-api-service
  namespace: default
spec:
  selector:
    app: news-api-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---

# Deployment - 뉴스 데이터 수집 서비스 (8001 포트)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: news-data-collector
  namespace: default
  labels:
    app: news-data-collector
spec:
  replicas: 1  # 데이터 수집은 1개만 (중복 방지)
  selector:
    matchLabels:
      app: news-data-collector
  template:
    metadata:
      labels:
        app: news-data-collector
    spec:
      serviceAccountName: news-data-collector-sa
      containers:
      - name: data-collector
        image: yulee0461/news-data-collector:latest
        ports:
        - containerPort: 8001
        # 헬스체크 타이밍을 DynamoDB + S3 연결 시간을 고려해서 조정
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 120  # 2분 대기 (DynamoDB + S3 연결 시간 고려)
          periodSeconds: 30         # 30초마다 체크
          timeoutSeconds: 10        # 10초 타임아웃
          failureThreshold: 3       # 3번 실패 후 재시작
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 90   # 1.5분 대기
          periodSeconds: 15         # 15초마다 체크
          timeoutSeconds: 10        # 10초 타임아웃
          failureThreshold: 3       # 3번 실패 후 not ready
        # 리소스 설정 (데이터 수집용이므로 더 많이 할당)
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        # 환경변수 추가 (필요한 경우)
        env:
        - name: AWS_DEFAULT_REGION
          value: ap-northeast-2
        - name: DYNAMODB_TABLE_NAME
          value: naver_news_articles
---

# Service - 데이터 수집 서비스 (내부 통신용)
apiVersion: v1
kind: Service
metadata:
  name: news-data-collector-service
  namespace: default
spec:
  selector:
    app: news-data-collector
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8001
    name: http
  type: ClusterIP
---

# CronJob - 10분마다 뉴스 수집 (URL 파라미터 제거)
apiVersion: batch/v1
kind: CronJob
metadata:
  name: news-collection-cron
  namespace: default
spec:
  schedule: "*/10 * * * *"  # 10분마다 실행
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: news-collector
            image: curlimages/curl:latest
            command:
            - /bin/sh
            - -c
            - |
              echo "🚀 뉴스 수집 시작: $(date)"
              
              # 데이터 수집 서비스 API 호출 (파라미터 제거 - 기본값 사용)
              RESPONSE=$(curl -sS -X POST -w "\n%{http_code}" http://news-data-collector-service/api/collect)

              HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
              BODY=$(echo "$RESPONSE" | sed '$d')

              echo "📊 HTTP Status: $HTTP_STATUS"
              echo "📝 Response: $BODY"

              if [ "$HTTP_STATUS" = "200" ]; then
                echo "✅ 뉴스 수집 성공"
              else
                echo "❌ 뉴스 수집 실패"
                exit 1
              fi
          restartPolicy: Never
      backoffLimit: 3  # 실패 시 3번까지 재시도
  successfulJobsHistoryLimit: 2  # 성공한 Job 2개까지 보관
  failedJobsHistoryLimit: 2      # 실패한 Job 2개까지 보관
---

# Ingress 추가 (ALB 생성)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: news-api-ingress
  namespace: default
  annotations:
    # ALB 관련 설정
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:236528210774:certificate/462ec99d-0e3e-41e7-a673-df7463b93bb0
    
    # DNS 자동 등록 (External DNS가 처리)
    external-dns.alpha.kubernetes.io/hostname: api.ioinews.shop
    
    # 헬스체크 설정
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
spec:
  rules:
  - host: api.ioinews.shop
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: news-api-service
            port:
              number: 80
